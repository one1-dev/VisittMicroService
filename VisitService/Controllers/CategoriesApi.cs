/*
 * Visitt Dashboard API
 *
 * API for Visitt calls and analytics in Azrieli complexes
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: benayan@one1.co.il
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using VisitService.Attributes;
using VisitService.Models;
using VisitService.Services.Interfaces;

namespace VisitService.Controllers;

/// <summary>
/// 
/// </summary>
[ApiController]
public class CategoriesApiController(ICategoriesService categoriesService) : ControllerBase
{ 
    /// <summary>
    /// Get category by ID
    /// </summary>
    /// <remarks>Get category with its sub-categories</remarks>
    /// <param name="categoryId"></param>
    /// <param name="cancellationToken">The cancellation token to cancel the operation.</param>
    /// <response code="200">Successful response</response>
    [HttpGet]
    [Route("/categories/{categoryId}")]
    // [Authorize]
    [ValidateModelState]
    [SwaggerOperation("CategoriesCategoryIdGet")]
    [SwaggerResponse(statusCode: 200, type: typeof(Category), description: "Successful response")]
    public virtual async Task<IActionResult> CategoriesCategoryIdGet([FromRoute (Name = "categoryId")][Required]string categoryId, CancellationToken cancellationToken)
        => Ok(await categoriesService.GetCategoryById(categoryId, cancellationToken));

    /// <summary>
    /// Get list of categories
    /// </summary>
    /// <param name="categoriesSearchPostRequest"></param>
    /// <param name="cancellationToken">The cancellation token to cancel the operation.</param>
    /// <response code="200">Successful response</response>
    [HttpPost]
    [Route("/categories/search")]
    // [Authorize]
    [Consumes("application/json")]
    [ValidateModelState]
    [SwaggerOperation("CategoriesSearchPost")]
    [SwaggerResponse(statusCode: 200, type: typeof(CategoriesPaginated), description: "Successful response")]
    public virtual async Task<IActionResult> CategoriesSearchPost([FromBody]CategoriesSearchPostRequest? categoriesSearchPostRequest, CancellationToken cancellationToken)
    {
        var limit = categoriesSearchPostRequest?.Limit ?? 20;
        var skip = categoriesSearchPostRequest?.Skip ?? 0;
        var filters = categoriesSearchPostRequest?.Filters;
        return Ok(await categoriesService.GetCategories(limit, skip, filters, cancellationToken));
    }
}